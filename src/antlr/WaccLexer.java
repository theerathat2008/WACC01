// Generated from ./WaccLexer.g4 by ANTLR 4.4
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class WaccLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		BEGIN=1, END=2, IS=3, IF=4, THEN=5, ELSE=6, FI=7, READ=8, FREE=9, RETURN=10, 
		EXIT=11, PRINT=12, PRINTLN=13, SKIP=14, NEWPAIR=15, CALL=16, FST=17, SND=18, 
		PAIR_STRING=19, WHILE=20, DO=21, DONE=22, SEMI_COLON=23, COMMA=24, EQUAL=25, 
		SQUARE_OPEN=26, SQUARE_CLOSED=27, OPEN_PAREN=28, CLOSE_PAREN=29, BINARY_OPER=30, 
		UNARY_OPER=31, BOOL_LITER=32, CHAR_LITER=33, STR_LITER=34, INT_LITER=35, 
		PAIR_LITER=36, BASE_TYPE=37, IDENT=38, COMMENT=39, WHITESPACE=40;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('"
	};
	public static final String[] ruleNames = {
		"INT_STRING", "BOOL_STRING", "CHAR_STRING", "STRING_STRING", "HASH", "UNDERSCORE", 
		"ESCAPEDCHAR", "DIGIT", "LOWERCHAR", "UPPERCHAR", "CHARACTER", "NULL", 
		"TRUE", "FALSE", "BEGIN", "END", "IS", "IF", "THEN", "ELSE", "FI", "READ", 
		"FREE", "RETURN", "EXIT", "PRINT", "PRINTLN", "SKIP", "NEWPAIR", "CALL", 
		"FST", "SND", "PAIR_STRING", "WHILE", "DO", "DONE", "SEMI_COLON", "COMMA", 
		"EQUAL", "SQUARE_OPEN", "SQUARE_CLOSED", "OPEN_PAREN", "CLOSE_PAREN", 
		"BINARY_OPER", "UNARY_OPER", "BOOL_LITER", "CHAR_LITER", "STR_LITER", 
		"INT_LITER", "PAIR_LITER", "BASE_TYPE", "IDENT", "COMMENT", "WHITESPACE"
	};


	public WaccLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "WaccLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2*\u017f\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3"+
		"\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3"+
		"\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\f\5\f\u0094\n\f\3\r\3\r\3\r\3\r"+
		"\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20"+
		"\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23"+
		"\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\27"+
		"\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3"+
		"!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3$\3$\3$\3%\3%\3%\3%"+
		"\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3-\3-\3-\3-\3-\3"+
		"-\3-\3-\3-\3-\3-\3-\5-\u0130\n-\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\5.\u013c"+
		"\n.\3/\3/\5/\u0140\n/\3\60\3\60\3\60\3\60\3\61\3\61\7\61\u0148\n\61\f"+
		"\61\16\61\u014b\13\61\3\61\3\61\3\62\5\62\u0150\n\62\3\62\6\62\u0153\n"+
		"\62\r\62\16\62\u0154\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\5\64"+
		"\u0160\n\64\3\65\3\65\3\65\5\65\u0165\n\65\3\65\3\65\3\65\3\65\7\65\u016b"+
		"\n\65\f\65\16\65\u016e\13\65\3\66\3\66\7\66\u0172\n\66\f\66\16\66\u0175"+
		"\13\66\3\66\3\66\3\67\6\67\u017a\n\67\r\67\16\67\u017b\3\67\3\67\2\28"+
		"\3\2\5\2\7\2\t\2\13\2\r\2\17\2\21\2\23\2\25\2\27\2\31\2\33\2\35\2\37\3"+
		"!\4#\5%\6\'\7)\b+\t-\n/\13\61\f\63\r\65\16\67\179\20;\21=\22?\23A\24C"+
		"\25E\26G\27I\30K\31M\32O\33Q\34S\35U\36W\37Y [!]\"_#a$c%e&g\'i(k)m*\3"+
		"\2\n\13\2$$))\62\62^^ddhhppttvv\4\2$$))\3\2^^\7\2\'\',-//\61\61@@\4\2"+
		"##//\4\2--//\4\2\f\f\17\17\4\2\13\f\"\"\u018a\2\37\3\2\2\2\2!\3\2\2\2"+
		"\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2"+
		"/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2"+
		"\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2"+
		"G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3"+
		"\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2"+
		"\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2"+
		"m\3\2\2\2\3o\3\2\2\2\5s\3\2\2\2\7x\3\2\2\2\t}\3\2\2\2\13\u0084\3\2\2\2"+
		"\r\u0086\3\2\2\2\17\u0088\3\2\2\2\21\u008a\3\2\2\2\23\u008c\3\2\2\2\25"+
		"\u008e\3\2\2\2\27\u0093\3\2\2\2\31\u0095\3\2\2\2\33\u009a\3\2\2\2\35\u009f"+
		"\3\2\2\2\37\u00a5\3\2\2\2!\u00ab\3\2\2\2#\u00af\3\2\2\2%\u00b2\3\2\2\2"+
		"\'\u00b5\3\2\2\2)\u00ba\3\2\2\2+\u00bf\3\2\2\2-\u00c2\3\2\2\2/\u00c7\3"+
		"\2\2\2\61\u00cc\3\2\2\2\63\u00d3\3\2\2\2\65\u00d8\3\2\2\2\67\u00de\3\2"+
		"\2\29\u00e6\3\2\2\2;\u00eb\3\2\2\2=\u00f3\3\2\2\2?\u00f8\3\2\2\2A\u00fc"+
		"\3\2\2\2C\u0100\3\2\2\2E\u0105\3\2\2\2G\u010b\3\2\2\2I\u010e\3\2\2\2K"+
		"\u0113\3\2\2\2M\u0115\3\2\2\2O\u0117\3\2\2\2Q\u0119\3\2\2\2S\u011b\3\2"+
		"\2\2U\u011d\3\2\2\2W\u011f\3\2\2\2Y\u012f\3\2\2\2[\u013b\3\2\2\2]\u013f"+
		"\3\2\2\2_\u0141\3\2\2\2a\u0145\3\2\2\2c\u014f\3\2\2\2e\u0156\3\2\2\2g"+
		"\u015f\3\2\2\2i\u0164\3\2\2\2k\u016f\3\2\2\2m\u0179\3\2\2\2op\7k\2\2p"+
		"q\7p\2\2qr\7v\2\2r\4\3\2\2\2st\7d\2\2tu\7q\2\2uv\7q\2\2vw\7n\2\2w\6\3"+
		"\2\2\2xy\7e\2\2yz\7j\2\2z{\7c\2\2{|\7t\2\2|\b\3\2\2\2}~\7u\2\2~\177\7"+
		"v\2\2\177\u0080\7t\2\2\u0080\u0081\7k\2\2\u0081\u0082\7p\2\2\u0082\u0083"+
		"\7i\2\2\u0083\n\3\2\2\2\u0084\u0085\7%\2\2\u0085\f\3\2\2\2\u0086\u0087"+
		"\7a\2\2\u0087\16\3\2\2\2\u0088\u0089\t\2\2\2\u0089\20\3\2\2\2\u008a\u008b"+
		"\4\62;\2\u008b\22\3\2\2\2\u008c\u008d\4c|\2\u008d\24\3\2\2\2\u008e\u008f"+
		"\4C\\\2\u008f\26\3\2\2\2\u0090\u0094\n\3\2\2\u0091\u0092\t\4\2\2\u0092"+
		"\u0094\5\17\b\2\u0093\u0090\3\2\2\2\u0093\u0091\3\2\2\2\u0094\30\3\2\2"+
		"\2\u0095\u0096\7p\2\2\u0096\u0097\7w\2\2\u0097\u0098\7n\2\2\u0098\u0099"+
		"\7n\2\2\u0099\32\3\2\2\2\u009a\u009b\7v\2\2\u009b\u009c\7t\2\2\u009c\u009d"+
		"\7w\2\2\u009d\u009e\7g\2\2\u009e\34\3\2\2\2\u009f\u00a0\7h\2\2\u00a0\u00a1"+
		"\7c\2\2\u00a1\u00a2\7n\2\2\u00a2\u00a3\7u\2\2\u00a3\u00a4\7g\2\2\u00a4"+
		"\36\3\2\2\2\u00a5\u00a6\7d\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8\7i\2\2\u00a8"+
		"\u00a9\7k\2\2\u00a9\u00aa\7p\2\2\u00aa \3\2\2\2\u00ab\u00ac\7g\2\2\u00ac"+
		"\u00ad\7p\2\2\u00ad\u00ae\7f\2\2\u00ae\"\3\2\2\2\u00af\u00b0\7k\2\2\u00b0"+
		"\u00b1\7u\2\2\u00b1$\3\2\2\2\u00b2\u00b3\7k\2\2\u00b3\u00b4\7h\2\2\u00b4"+
		"&\3\2\2\2\u00b5\u00b6\7v\2\2\u00b6\u00b7\7j\2\2\u00b7\u00b8\7g\2\2\u00b8"+
		"\u00b9\7p\2\2\u00b9(\3\2\2\2\u00ba\u00bb\7g\2\2\u00bb\u00bc\7n\2\2\u00bc"+
		"\u00bd\7u\2\2\u00bd\u00be\7g\2\2\u00be*\3\2\2\2\u00bf\u00c0\7h\2\2\u00c0"+
		"\u00c1\7k\2\2\u00c1,\3\2\2\2\u00c2\u00c3\7t\2\2\u00c3\u00c4\7g\2\2\u00c4"+
		"\u00c5\7c\2\2\u00c5\u00c6\7f\2\2\u00c6.\3\2\2\2\u00c7\u00c8\7h\2\2\u00c8"+
		"\u00c9\7t\2\2\u00c9\u00ca\7g\2\2\u00ca\u00cb\7g\2\2\u00cb\60\3\2\2\2\u00cc"+
		"\u00cd\7t\2\2\u00cd\u00ce\7g\2\2\u00ce\u00cf\7v\2\2\u00cf\u00d0\7w\2\2"+
		"\u00d0\u00d1\7t\2\2\u00d1\u00d2\7p\2\2\u00d2\62\3\2\2\2\u00d3\u00d4\7"+
		"g\2\2\u00d4\u00d5\7z\2\2\u00d5\u00d6\7k\2\2\u00d6\u00d7\7v\2\2\u00d7\64"+
		"\3\2\2\2\u00d8\u00d9\7r\2\2\u00d9\u00da\7t\2\2\u00da\u00db\7k\2\2\u00db"+
		"\u00dc\7p\2\2\u00dc\u00dd\7v\2\2\u00dd\66\3\2\2\2\u00de\u00df\7r\2\2\u00df"+
		"\u00e0\7t\2\2\u00e0\u00e1\7k\2\2\u00e1\u00e2\7p\2\2\u00e2\u00e3\7v\2\2"+
		"\u00e3\u00e4\7n\2\2\u00e4\u00e5\7p\2\2\u00e58\3\2\2\2\u00e6\u00e7\7u\2"+
		"\2\u00e7\u00e8\7m\2\2\u00e8\u00e9\7k\2\2\u00e9\u00ea\7r\2\2\u00ea:\3\2"+
		"\2\2\u00eb\u00ec\7p\2\2\u00ec\u00ed\7g\2\2\u00ed\u00ee\7y\2\2\u00ee\u00ef"+
		"\7r\2\2\u00ef\u00f0\7c\2\2\u00f0\u00f1\7k\2\2\u00f1\u00f2\7t\2\2\u00f2"+
		"<\3\2\2\2\u00f3\u00f4\7e\2\2\u00f4\u00f5\7c\2\2\u00f5\u00f6\7n\2\2\u00f6"+
		"\u00f7\7n\2\2\u00f7>\3\2\2\2\u00f8\u00f9\7h\2\2\u00f9\u00fa\7u\2\2\u00fa"+
		"\u00fb\7v\2\2\u00fb@\3\2\2\2\u00fc\u00fd\7u\2\2\u00fd\u00fe\7p\2\2\u00fe"+
		"\u00ff\7f\2\2\u00ffB\3\2\2\2\u0100\u0101\7r\2\2\u0101\u0102\7c\2\2\u0102"+
		"\u0103\7k\2\2\u0103\u0104\7t\2\2\u0104D\3\2\2\2\u0105\u0106\7y\2\2\u0106"+
		"\u0107\7j\2\2\u0107\u0108\7k\2\2\u0108\u0109\7n\2\2\u0109\u010a\7g\2\2"+
		"\u010aF\3\2\2\2\u010b\u010c\7f\2\2\u010c\u010d\7q\2\2\u010dH\3\2\2\2\u010e"+
		"\u010f\7f\2\2\u010f\u0110\7q\2\2\u0110\u0111\7p\2\2\u0111\u0112\7g\2\2"+
		"\u0112J\3\2\2\2\u0113\u0114\7=\2\2\u0114L\3\2\2\2\u0115\u0116\7.\2\2\u0116"+
		"N\3\2\2\2\u0117\u0118\7?\2\2\u0118P\3\2\2\2\u0119\u011a\7]\2\2\u011aR"+
		"\3\2\2\2\u011b\u011c\7_\2\2\u011cT\3\2\2\2\u011d\u011e\7*\2\2\u011eV\3"+
		"\2\2\2\u011f\u0120\7+\2\2\u0120X\3\2\2\2\u0121\u0130\t\5\2\2\u0122\u0123"+
		"\7@\2\2\u0123\u0130\7?\2\2\u0124\u0130\7>\2\2\u0125\u0126\7>\2\2\u0126"+
		"\u0130\7?\2\2\u0127\u0128\7?\2\2\u0128\u0130\7?\2\2\u0129\u012a\7#\2\2"+
		"\u012a\u0130\7?\2\2\u012b\u012c\7(\2\2\u012c\u0130\7(\2\2\u012d\u012e"+
		"\7~\2\2\u012e\u0130\7~\2\2\u012f\u0121\3\2\2\2\u012f\u0122\3\2\2\2\u012f"+
		"\u0124\3\2\2\2\u012f\u0125\3\2\2\2\u012f\u0127\3\2\2\2\u012f\u0129\3\2"+
		"\2\2\u012f\u012b\3\2\2\2\u012f\u012d\3\2\2\2\u0130Z\3\2\2\2\u0131\u013c"+
		"\t\6\2\2\u0132\u0133\7n\2\2\u0133\u0134\7g\2\2\u0134\u013c\7p\2\2\u0135"+
		"\u0136\7q\2\2\u0136\u0137\7t\2\2\u0137\u013c\7f\2\2\u0138\u0139\7e\2\2"+
		"\u0139\u013a\7j\2\2\u013a\u013c\7t\2\2\u013b\u0131\3\2\2\2\u013b\u0132"+
		"\3\2\2\2\u013b\u0135\3\2\2\2\u013b\u0138\3\2\2\2\u013c\\\3\2\2\2\u013d"+
		"\u0140\5\33\16\2\u013e\u0140\5\35\17\2\u013f\u013d\3\2\2\2\u013f\u013e"+
		"\3\2\2\2\u0140^\3\2\2\2\u0141\u0142\7)\2\2\u0142\u0143\5\27\f\2\u0143"+
		"\u0144\7)\2\2\u0144`\3\2\2\2\u0145\u0149\7$\2\2\u0146\u0148\5\27\f\2\u0147"+
		"\u0146\3\2\2\2\u0148\u014b\3\2\2\2\u0149\u0147\3\2\2\2\u0149\u014a\3\2"+
		"\2\2\u014a\u014c\3\2\2\2\u014b\u0149\3\2\2\2\u014c\u014d\7$\2\2\u014d"+
		"b\3\2\2\2\u014e\u0150\t\7\2\2\u014f\u014e\3\2\2\2\u014f\u0150\3\2\2\2"+
		"\u0150\u0152\3\2\2\2\u0151\u0153\5\21\t\2\u0152\u0151\3\2\2\2\u0153\u0154"+
		"\3\2\2\2\u0154\u0152\3\2\2\2\u0154\u0155\3\2\2\2\u0155d\3\2\2\2\u0156"+
		"\u0157\7p\2\2\u0157\u0158\7w\2\2\u0158\u0159\7n\2\2\u0159\u015a\7n\2\2"+
		"\u015af\3\2\2\2\u015b\u0160\5\3\2\2\u015c\u0160\5\5\3\2\u015d\u0160\5"+
		"\7\4\2\u015e\u0160\5\t\5\2\u015f\u015b\3\2\2\2\u015f\u015c\3\2\2\2\u015f"+
		"\u015d\3\2\2\2\u015f\u015e\3\2\2\2\u0160h\3\2\2\2\u0161\u0165\5\r\7\2"+
		"\u0162\u0165\5\23\n\2\u0163\u0165\5\25\13\2\u0164\u0161\3\2\2\2\u0164"+
		"\u0162\3\2\2\2\u0164\u0163\3\2\2\2\u0165\u016c\3\2\2\2\u0166\u016b\5\r"+
		"\7\2\u0167\u016b\5\23\n\2\u0168\u016b\5\25\13\2\u0169\u016b\5\21\t\2\u016a"+
		"\u0166\3\2\2\2\u016a\u0167\3\2\2\2\u016a\u0168\3\2\2\2\u016a\u0169\3\2"+
		"\2\2\u016b\u016e\3\2\2\2\u016c\u016a\3\2\2\2\u016c\u016d\3\2\2\2\u016d"+
		"j\3\2\2\2\u016e\u016c\3\2\2\2\u016f\u0173\7%\2\2\u0170\u0172\n\b\2\2\u0171"+
		"\u0170\3\2\2\2\u0172\u0175\3\2\2\2\u0173\u0171\3\2\2\2\u0173\u0174\3\2"+
		"\2\2\u0174\u0176\3\2\2\2\u0175\u0173\3\2\2\2\u0176\u0177\b\66\2\2\u0177"+
		"l\3\2\2\2\u0178\u017a\t\t\2\2\u0179\u0178\3\2\2\2\u017a\u017b\3\2\2\2"+
		"\u017b\u0179\3\2\2\2\u017b\u017c\3\2\2\2\u017c\u017d\3\2\2\2\u017d\u017e"+
		"\b\67\2\2\u017en\3\2\2\2\20\2\u0093\u012f\u013b\u013f\u0149\u014f\u0154"+
		"\u015f\u0164\u016a\u016c\u0173\u017b\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}