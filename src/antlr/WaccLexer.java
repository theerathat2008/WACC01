// Generated from ./WaccLexer.g4 by ANTLR 4.4
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class WaccLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		OPEN_PAREN=1, CLOSE_PAREN=2, UNARY_OPER=3, BINARY_OPER=4, IDENT=5, INTEGER=6, 
		INT_LITER=7, INT_SIGN=8, BOOL_LITER=9, CHAR_LITER=10, STR_LITER=11, CHARACTER=12, 
		ESCAPED_CHAR=13, PAIR_LITER=14, COMMENT=15, EOL=16, BEGIN=17, END=18, 
		IS=19, COMMA=20, SKIP=21, EQUAL=22, READ=23, FREE=24, RETURN=25, EXIT=26, 
		PRINT=27, PRINTLN=28, IF=29, THEN=30, ELSE=31, FI=32, WHILE=33, DO=34, 
		DONE=35, SEMI_COLON=36, NEWPAIR=37, CALL=38, FST=39, SND=40, INT_STRING=41, 
		BOOL_STRING=42, CHAR_STRING=43, STRING_STRING=44, SQUARE_OPEN=45, SQUARE_CLOSED=46, 
		PAIR_STRING=47;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'"
	};
	public static final String[] ruleNames = {
		"OPEN_PAREN", "CLOSE_PAREN", "UNARY_OPER", "BINARY_OPER", "IDENT", "DIGIT", 
		"INTEGER", "INT_LITER", "INT_SIGN", "BOOL_LITER", "CHAR_LITER", "STR_LITER", 
		"CHARACTER", "ESCAPED_CHAR", "PAIR_LITER", "COMMENT", "EOL", "BEGIN", 
		"END", "IS", "COMMA", "SKIP", "EQUAL", "READ", "FREE", "RETURN", "EXIT", 
		"PRINT", "PRINTLN", "IF", "THEN", "ELSE", "FI", "WHILE", "DO", "DONE", 
		"SEMI_COLON", "NEWPAIR", "CALL", "FST", "SND", "INT_STRING", "BOOL_STRING", 
		"CHAR_STRING", "STRING_STRING", "SQUARE_OPEN", "SQUARE_CLOSED", "PAIR_STRING"
	};


	public WaccLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "WaccLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\61\u0152\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\3\2\3\2\3\3\3\3\3\4\3\4"+
		"\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\5\4r\n\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5"+
		"\3\5\3\5\3\5\3\5\3\5\3\5\3\5\5\5\u0082\n\5\3\6\3\6\7\6\u0086\n\6\f\6\16"+
		"\6\u0089\13\6\3\7\3\7\3\b\6\b\u008e\n\b\r\b\16\b\u008f\3\t\5\t\u0093\n"+
		"\t\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\5\13\u00a2"+
		"\n\13\3\f\3\f\3\f\3\f\3\r\3\r\7\r\u00aa\n\r\f\r\16\r\u00ad\13\r\3\r\3"+
		"\r\3\16\3\16\3\16\5\16\u00b4\n\16\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3"+
		"\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3"+
		"\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\27\3"+
		"\27\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3"+
		"\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3"+
		"\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3"+
		" \3 \3 \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3$\3$\3$\3"+
		"%\3%\3%\3%\3%\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)"+
		"\3)\3)\3)\3*\3*\3*\3*\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3.\3."+
		"\3.\3.\3.\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\61\3\61\3\61\2\2\62\3\3\5"+
		"\4\7\5\t\6\13\7\r\2\17\b\21\t\23\n\25\13\27\f\31\r\33\16\35\17\37\20!"+
		"\21#\22%\23\'\24)\25+\26-\27/\30\61\31\63\32\65\33\67\349\35;\36=\37?"+
		" A!C\"E#G$I%K&M\'O(Q)S*U+W,Y-[.]/_\60a\61\3\2\n\4\2##//\7\2\'\',-//\61"+
		"\61@@\5\2C\\aac|\6\2\62;C\\aac|\4\2--//\5\2$$))^^\13\2$$))\62\62^^ddh"+
		"hppttvv\3\2\f\f\u0160\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2"+
		"\2\13\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27"+
		"\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2"+
		"\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2"+
		"\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
		"\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2"+
		"\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2"+
		"\2\2\2a\3\2\2\2\3c\3\2\2\2\5e\3\2\2\2\7q\3\2\2\2\t\u0081\3\2\2\2\13\u0083"+
		"\3\2\2\2\r\u008a\3\2\2\2\17\u008d\3\2\2\2\21\u0092\3\2\2\2\23\u0096\3"+
		"\2\2\2\25\u00a1\3\2\2\2\27\u00a3\3\2\2\2\31\u00a7\3\2\2\2\33\u00b3\3\2"+
		"\2\2\35\u00b5\3\2\2\2\37\u00b7\3\2\2\2!\u00bc\3\2\2\2#\u00c0\3\2\2\2%"+
		"\u00c5\3\2\2\2\'\u00cb\3\2\2\2)\u00cf\3\2\2\2+\u00d2\3\2\2\2-\u00d4\3"+
		"\2\2\2/\u00d9\3\2\2\2\61\u00db\3\2\2\2\63\u00e0\3\2\2\2\65\u00e5\3\2\2"+
		"\2\67\u00ec\3\2\2\29\u00f1\3\2\2\2;\u00f7\3\2\2\2=\u00ff\3\2\2\2?\u0102"+
		"\3\2\2\2A\u0107\3\2\2\2C\u010c\3\2\2\2E\u010f\3\2\2\2G\u0115\3\2\2\2I"+
		"\u0118\3\2\2\2K\u011d\3\2\2\2M\u011f\3\2\2\2O\u0127\3\2\2\2Q\u012c\3\2"+
		"\2\2S\u0130\3\2\2\2U\u0134\3\2\2\2W\u0138\3\2\2\2Y\u013d\3\2\2\2[\u0142"+
		"\3\2\2\2]\u0149\3\2\2\2_\u014b\3\2\2\2a\u014d\3\2\2\2cd\7*\2\2d\4\3\2"+
		"\2\2ef\7+\2\2f\6\3\2\2\2gr\t\2\2\2hi\7n\2\2ij\7g\2\2jr\7p\2\2kl\7q\2\2"+
		"lm\7t\2\2mr\7f\2\2no\7e\2\2op\7j\2\2pr\7t\2\2qg\3\2\2\2qh\3\2\2\2qk\3"+
		"\2\2\2qn\3\2\2\2r\b\3\2\2\2s\u0082\t\3\2\2tu\7@\2\2u\u0082\7?\2\2v\u0082"+
		"\7>\2\2wx\7>\2\2x\u0082\7?\2\2yz\7?\2\2z\u0082\7?\2\2{|\7#\2\2|\u0082"+
		"\7?\2\2}~\7(\2\2~\u0082\7(\2\2\177\u0080\7~\2\2\u0080\u0082\7~\2\2\u0081"+
		"s\3\2\2\2\u0081t\3\2\2\2\u0081v\3\2\2\2\u0081w\3\2\2\2\u0081y\3\2\2\2"+
		"\u0081{\3\2\2\2\u0081}\3\2\2\2\u0081\177\3\2\2\2\u0082\n\3\2\2\2\u0083"+
		"\u0087\t\4\2\2\u0084\u0086\t\5\2\2\u0085\u0084\3\2\2\2\u0086\u0089\3\2"+
		"\2\2\u0087\u0085\3\2\2\2\u0087\u0088\3\2\2\2\u0088\f\3\2\2\2\u0089\u0087"+
		"\3\2\2\2\u008a\u008b\4\62;\2\u008b\16\3\2\2\2\u008c\u008e\5\r\7\2\u008d"+
		"\u008c\3\2\2\2\u008e\u008f\3\2\2\2\u008f\u008d\3\2\2\2\u008f\u0090\3\2"+
		"\2\2\u0090\20\3\2\2\2\u0091\u0093\5\23\n\2\u0092\u0091\3\2\2\2\u0092\u0093"+
		"\3\2\2\2\u0093\u0094\3\2\2\2\u0094\u0095\5\17\b\2\u0095\22\3\2\2\2\u0096"+
		"\u0097\t\6\2\2\u0097\24\3\2\2\2\u0098\u0099\7v\2\2\u0099\u009a\7t\2\2"+
		"\u009a\u009b\7w\2\2\u009b\u00a2\7g\2\2\u009c\u009d\7h\2\2\u009d\u009e"+
		"\7c\2\2\u009e\u009f\7n\2\2\u009f\u00a0\7u\2\2\u00a0\u00a2\7g\2\2\u00a1"+
		"\u0098\3\2\2\2\u00a1\u009c\3\2\2\2\u00a2\26\3\2\2\2\u00a3\u00a4\7)\2\2"+
		"\u00a4\u00a5\5\33\16\2\u00a5\u00a6\7)\2\2\u00a6\30\3\2\2\2\u00a7\u00ab"+
		"\7$\2\2\u00a8\u00aa\5\33\16\2\u00a9\u00a8\3\2\2\2\u00aa\u00ad\3\2\2\2"+
		"\u00ab\u00a9\3\2\2\2\u00ab\u00ac\3\2\2\2\u00ac\u00ae\3\2\2\2\u00ad\u00ab"+
		"\3\2\2\2\u00ae\u00af\7$\2\2\u00af\32\3\2\2\2\u00b0\u00b4\n\7\2\2\u00b1"+
		"\u00b2\7^\2\2\u00b2\u00b4\5\35\17\2\u00b3\u00b0\3\2\2\2\u00b3\u00b1\3"+
		"\2\2\2\u00b4\34\3\2\2\2\u00b5\u00b6\t\b\2\2\u00b6\36\3\2\2\2\u00b7\u00b8"+
		"\7p\2\2\u00b8\u00b9\7w\2\2\u00b9\u00ba\7n\2\2\u00ba\u00bb\7n\2\2\u00bb"+
		" \3\2\2\2\u00bc\u00bd\7%\2\2\u00bd\u00be\n\t\2\2\u00be\u00bf\5#\22\2\u00bf"+
		"\"\3\2\2\2\u00c0\u00c1\7^\2\2\u00c1\u00c2\7p\2\2\u00c2\u00c3\3\2\2\2\u00c3"+
		"\u00c4\b\22\2\2\u00c4$\3\2\2\2\u00c5\u00c6\7d\2\2\u00c6\u00c7\7g\2\2\u00c7"+
		"\u00c8\7i\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca\7p\2\2\u00ca&\3\2\2\2\u00cb"+
		"\u00cc\7g\2\2\u00cc\u00cd\7p\2\2\u00cd\u00ce\7f\2\2\u00ce(\3\2\2\2\u00cf"+
		"\u00d0\7k\2\2\u00d0\u00d1\7u\2\2\u00d1*\3\2\2\2\u00d2\u00d3\7.\2\2\u00d3"+
		",\3\2\2\2\u00d4\u00d5\7u\2\2\u00d5\u00d6\7m\2\2\u00d6\u00d7\7k\2\2\u00d7"+
		"\u00d8\7r\2\2\u00d8.\3\2\2\2\u00d9\u00da\7?\2\2\u00da\60\3\2\2\2\u00db"+
		"\u00dc\7t\2\2\u00dc\u00dd\7g\2\2\u00dd\u00de\7c\2\2\u00de\u00df\7f\2\2"+
		"\u00df\62\3\2\2\2\u00e0\u00e1\7h\2\2\u00e1\u00e2\7t\2\2\u00e2\u00e3\7"+
		"g\2\2\u00e3\u00e4\7g\2\2\u00e4\64\3\2\2\2\u00e5\u00e6\7t\2\2\u00e6\u00e7"+
		"\7g\2\2\u00e7\u00e8\7v\2\2\u00e8\u00e9\7w\2\2\u00e9\u00ea\7t\2\2\u00ea"+
		"\u00eb\7p\2\2\u00eb\66\3\2\2\2\u00ec\u00ed\7g\2\2\u00ed\u00ee\7z\2\2\u00ee"+
		"\u00ef\7k\2\2\u00ef\u00f0\7v\2\2\u00f08\3\2\2\2\u00f1\u00f2\7r\2\2\u00f2"+
		"\u00f3\7t\2\2\u00f3\u00f4\7k\2\2\u00f4\u00f5\7p\2\2\u00f5\u00f6\7v\2\2"+
		"\u00f6:\3\2\2\2\u00f7\u00f8\7r\2\2\u00f8\u00f9\7t\2\2\u00f9\u00fa\7k\2"+
		"\2\u00fa\u00fb\7p\2\2\u00fb\u00fc\7v\2\2\u00fc\u00fd\7n\2\2\u00fd\u00fe"+
		"\7p\2\2\u00fe<\3\2\2\2\u00ff\u0100\7k\2\2\u0100\u0101\7h\2\2\u0101>\3"+
		"\2\2\2\u0102\u0103\7v\2\2\u0103\u0104\7j\2\2\u0104\u0105\7g\2\2\u0105"+
		"\u0106\7p\2\2\u0106@\3\2\2\2\u0107\u0108\7g\2\2\u0108\u0109\7n\2\2\u0109"+
		"\u010a\7u\2\2\u010a\u010b\7g\2\2\u010bB\3\2\2\2\u010c\u010d\7h\2\2\u010d"+
		"\u010e\7k\2\2\u010eD\3\2\2\2\u010f\u0110\7y\2\2\u0110\u0111\7j\2\2\u0111"+
		"\u0112\7k\2\2\u0112\u0113\7n\2\2\u0113\u0114\7g\2\2\u0114F\3\2\2\2\u0115"+
		"\u0116\7f\2\2\u0116\u0117\7q\2\2\u0117H\3\2\2\2\u0118\u0119\7f\2\2\u0119"+
		"\u011a\7q\2\2\u011a\u011b\7p\2\2\u011b\u011c\7g\2\2\u011cJ\3\2\2\2\u011d"+
		"\u011e\7=\2\2\u011eL\3\2\2\2\u011f\u0120\7p\2\2\u0120\u0121\7g\2\2\u0121"+
		"\u0122\7y\2\2\u0122\u0123\7r\2\2\u0123\u0124\7c\2\2\u0124\u0125\7k\2\2"+
		"\u0125\u0126\7t\2\2\u0126N\3\2\2\2\u0127\u0128\7e\2\2\u0128\u0129\7c\2"+
		"\2\u0129\u012a\7n\2\2\u012a\u012b\7n\2\2\u012bP\3\2\2\2\u012c\u012d\7"+
		"h\2\2\u012d\u012e\7u\2\2\u012e\u012f\7v\2\2\u012fR\3\2\2\2\u0130\u0131"+
		"\7u\2\2\u0131\u0132\7p\2\2\u0132\u0133\7f\2\2\u0133T\3\2\2\2\u0134\u0135"+
		"\7k\2\2\u0135\u0136\7p\2\2\u0136\u0137\7v\2\2\u0137V\3\2\2\2\u0138\u0139"+
		"\7d\2\2\u0139\u013a\7q\2\2\u013a\u013b\7q\2\2\u013b\u013c\7n\2\2\u013c"+
		"X\3\2\2\2\u013d\u013e\7e\2\2\u013e\u013f\7j\2\2\u013f\u0140\7c\2\2\u0140"+
		"\u0141\7t\2\2\u0141Z\3\2\2\2\u0142\u0143\7u\2\2\u0143\u0144\7v\2\2\u0144"+
		"\u0145\7t\2\2\u0145\u0146\7k\2\2\u0146\u0147\7p\2\2\u0147\u0148\7i\2\2"+
		"\u0148\\\3\2\2\2\u0149\u014a\7]\2\2\u014a^\3\2\2\2\u014b\u014c\7_\2\2"+
		"\u014c`\3\2\2\2\u014d\u014e\7r\2\2\u014e\u014f\7c\2\2\u014f\u0150\7k\2"+
		"\2\u0150\u0151\7t\2\2\u0151b\3\2\2\2\13\2q\u0081\u0087\u008f\u0092\u00a1"+
		"\u00ab\u00b3\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}