// Generated from ./WaccLexer.g4 by ANTLR 4.4
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class WaccLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		BEGIN=1, END=2, IS=3, IF=4, THEN=5, ELSE=6, FI=7, READ=8, FREE=9, RETURN=10, 
		EXIT=11, PRINT=12, PRINTLN=13, SKIP=14, NEWPAIR=15, CALL=16, FST=17, SND=18, 
		PAIR_STRING=19, WHILE=20, DO=21, DONE=22, SEMI_COLON=23, COMMA=24, EQUAL=25, 
		SQUARE_OPEN=26, SQUARE_CLOSED=27, OPEN_PAREN=28, CLOSE_PAREN=29, UNARY_OPER=30, 
		BINARY_OPER=31, BOOL_LITER=32, CHAR_LITER=33, STR_LITER=34, INT_LITER=35, 
		PAIR_LITER=36, BASE_TYPE=37, IDENT=38, COMMENT=39, WHITESPACE=40;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('"
	};
	public static final String[] ruleNames = {
		"INT_STRING", "BOOL_STRING", "CHAR_STRING", "STRING_STRING", "BEGIN", 
		"END", "IS", "IF", "THEN", "ELSE", "FI", "READ", "FREE", "RETURN", "EXIT", 
		"PRINT", "PRINTLN", "SKIP", "NEWPAIR", "CALL", "FST", "SND", "PAIR_STRING", 
		"WHILE", "DO", "DONE", "SEMI_COLON", "COMMA", "EQUAL", "SQUARE_OPEN", 
		"SQUARE_CLOSED", "OPEN_PAREN", "CLOSE_PAREN", "HASH", "UNDERSCORE", "ESCAPEDCHAR", 
		"UNARY_OPER", "BINARY_OPER", "DIGIT", "LOWERCHAR", "UPPERCHAR", "CHARACTER", 
		"NULL", "INTSIGN", "TRUE", "FALSE", "BOOL_LITER", "CHAR_LITER", "STR_LITER", 
		"INT_LITER", "PAIR_LITER", "BASE_TYPE", "IDENT", "COMMENT", "WHITESPACE"
	};


	public WaccLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "WaccLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2*\u0187\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3"+
		"\3\3\3\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6"+
		"\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3"+
		"\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16"+
		"\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20"+
		"\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25"+
		"\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30\3\30"+
		"\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33"+
		"\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3"+
		"\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\5&\u0113\n&\3\'"+
		"\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\5\'\u0123\n\'\3("+
		"\3(\3)\3)\3*\3*\3+\3+\3+\5+\u012e\n+\3,\3,\3,\3,\3,\3-\3-\3.\3.\3.\3."+
		"\3.\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\5\60"+
		"\u014b\n\60\3\61\3\61\3\61\3\61\3\62\3\62\7\62\u0153\n\62\f\62\16\62\u0156"+
		"\13\62\3\62\3\62\3\63\6\63\u015b\n\63\r\63\16\63\u015c\3\64\3\64\3\64"+
		"\3\64\3\64\3\65\3\65\3\65\3\65\5\65\u0168\n\65\3\66\3\66\3\66\5\66\u016d"+
		"\n\66\3\66\3\66\3\66\3\66\7\66\u0173\n\66\f\66\16\66\u0176\13\66\3\67"+
		"\3\67\7\67\u017a\n\67\f\67\16\67\u017d\13\67\3\67\3\67\38\68\u0182\n8"+
		"\r8\168\u0183\38\38\2\29\3\2\5\2\7\2\t\2\13\3\r\4\17\5\21\6\23\7\25\b"+
		"\27\t\31\n\33\13\35\f\37\r!\16#\17%\20\'\21)\22+\23-\24/\25\61\26\63\27"+
		"\65\30\67\319\32;\33=\34?\35A\36C\37E\2G\2I\2K M!O\2Q\2S\2U\2W\2Y\2[\2"+
		"]\2_\"a#c$e%g&i\'k(m)o*\3\2\n\13\2$$))\62\62^^ddhhppttvv\4\2##//\7\2\'"+
		"\',-//\61\61@@\4\2$$))\3\2^^\4\2--//\4\2\f\f\17\17\4\2\13\f\"\"\u0190"+
		"\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25"+
		"\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2"+
		"\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2"+
		"\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3"+
		"\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2"+
		"\2\2K\3\2\2\2\2M\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2"+
		"g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\3q\3\2\2\2\5u\3"+
		"\2\2\2\7z\3\2\2\2\t\177\3\2\2\2\13\u0086\3\2\2\2\r\u008c\3\2\2\2\17\u0090"+
		"\3\2\2\2\21\u0093\3\2\2\2\23\u0096\3\2\2\2\25\u009b\3\2\2\2\27\u00a0\3"+
		"\2\2\2\31\u00a3\3\2\2\2\33\u00a8\3\2\2\2\35\u00ad\3\2\2\2\37\u00b4\3\2"+
		"\2\2!\u00b9\3\2\2\2#\u00bf\3\2\2\2%\u00c7\3\2\2\2\'\u00cc\3\2\2\2)\u00d4"+
		"\3\2\2\2+\u00d9\3\2\2\2-\u00dd\3\2\2\2/\u00e1\3\2\2\2\61\u00e6\3\2\2\2"+
		"\63\u00ec\3\2\2\2\65\u00ef\3\2\2\2\67\u00f4\3\2\2\29\u00f6\3\2\2\2;\u00f8"+
		"\3\2\2\2=\u00fa\3\2\2\2?\u00fc\3\2\2\2A\u00fe\3\2\2\2C\u0100\3\2\2\2E"+
		"\u0102\3\2\2\2G\u0104\3\2\2\2I\u0106\3\2\2\2K\u0112\3\2\2\2M\u0122\3\2"+
		"\2\2O\u0124\3\2\2\2Q\u0126\3\2\2\2S\u0128\3\2\2\2U\u012d\3\2\2\2W\u012f"+
		"\3\2\2\2Y\u0134\3\2\2\2[\u0136\3\2\2\2]\u013b\3\2\2\2_\u014a\3\2\2\2a"+
		"\u014c\3\2\2\2c\u0150\3\2\2\2e\u015a\3\2\2\2g\u015e\3\2\2\2i\u0167\3\2"+
		"\2\2k\u016c\3\2\2\2m\u0177\3\2\2\2o\u0181\3\2\2\2qr\7k\2\2rs\7p\2\2st"+
		"\7v\2\2t\4\3\2\2\2uv\7d\2\2vw\7q\2\2wx\7q\2\2xy\7n\2\2y\6\3\2\2\2z{\7"+
		"e\2\2{|\7j\2\2|}\7c\2\2}~\7t\2\2~\b\3\2\2\2\177\u0080\7u\2\2\u0080\u0081"+
		"\7v\2\2\u0081\u0082\7t\2\2\u0082\u0083\7k\2\2\u0083\u0084\7p\2\2\u0084"+
		"\u0085\7i\2\2\u0085\n\3\2\2\2\u0086\u0087\7d\2\2\u0087\u0088\7g\2\2\u0088"+
		"\u0089\7i\2\2\u0089\u008a\7k\2\2\u008a\u008b\7p\2\2\u008b\f\3\2\2\2\u008c"+
		"\u008d\7g\2\2\u008d\u008e\7p\2\2\u008e\u008f\7f\2\2\u008f\16\3\2\2\2\u0090"+
		"\u0091\7k\2\2\u0091\u0092\7u\2\2\u0092\20\3\2\2\2\u0093\u0094\7k\2\2\u0094"+
		"\u0095\7h\2\2\u0095\22\3\2\2\2\u0096\u0097\7v\2\2\u0097\u0098\7j\2\2\u0098"+
		"\u0099\7g\2\2\u0099\u009a\7p\2\2\u009a\24\3\2\2\2\u009b\u009c\7g\2\2\u009c"+
		"\u009d\7n\2\2\u009d\u009e\7u\2\2\u009e\u009f\7g\2\2\u009f\26\3\2\2\2\u00a0"+
		"\u00a1\7h\2\2\u00a1\u00a2\7k\2\2\u00a2\30\3\2\2\2\u00a3\u00a4\7t\2\2\u00a4"+
		"\u00a5\7g\2\2\u00a5\u00a6\7c\2\2\u00a6\u00a7\7f\2\2\u00a7\32\3\2\2\2\u00a8"+
		"\u00a9\7h\2\2\u00a9\u00aa\7t\2\2\u00aa\u00ab\7g\2\2\u00ab\u00ac\7g\2\2"+
		"\u00ac\34\3\2\2\2\u00ad\u00ae\7t\2\2\u00ae\u00af\7g\2\2\u00af\u00b0\7"+
		"v\2\2\u00b0\u00b1\7w\2\2\u00b1\u00b2\7t\2\2\u00b2\u00b3\7p\2\2\u00b3\36"+
		"\3\2\2\2\u00b4\u00b5\7g\2\2\u00b5\u00b6\7z\2\2\u00b6\u00b7\7k\2\2\u00b7"+
		"\u00b8\7v\2\2\u00b8 \3\2\2\2\u00b9\u00ba\7r\2\2\u00ba\u00bb\7t\2\2\u00bb"+
		"\u00bc\7k\2\2\u00bc\u00bd\7p\2\2\u00bd\u00be\7v\2\2\u00be\"\3\2\2\2\u00bf"+
		"\u00c0\7r\2\2\u00c0\u00c1\7t\2\2\u00c1\u00c2\7k\2\2\u00c2\u00c3\7p\2\2"+
		"\u00c3\u00c4\7v\2\2\u00c4\u00c5\7n\2\2\u00c5\u00c6\7p\2\2\u00c6$\3\2\2"+
		"\2\u00c7\u00c8\7u\2\2\u00c8\u00c9\7m\2\2\u00c9\u00ca\7k\2\2\u00ca\u00cb"+
		"\7r\2\2\u00cb&\3\2\2\2\u00cc\u00cd\7p\2\2\u00cd\u00ce\7g\2\2\u00ce\u00cf"+
		"\7y\2\2\u00cf\u00d0\7r\2\2\u00d0\u00d1\7c\2\2\u00d1\u00d2\7k\2\2\u00d2"+
		"\u00d3\7t\2\2\u00d3(\3\2\2\2\u00d4\u00d5\7e\2\2\u00d5\u00d6\7c\2\2\u00d6"+
		"\u00d7\7n\2\2\u00d7\u00d8\7n\2\2\u00d8*\3\2\2\2\u00d9\u00da\7h\2\2\u00da"+
		"\u00db\7u\2\2\u00db\u00dc\7v\2\2\u00dc,\3\2\2\2\u00dd\u00de\7u\2\2\u00de"+
		"\u00df\7p\2\2\u00df\u00e0\7f\2\2\u00e0.\3\2\2\2\u00e1\u00e2\7r\2\2\u00e2"+
		"\u00e3\7c\2\2\u00e3\u00e4\7k\2\2\u00e4\u00e5\7t\2\2\u00e5\60\3\2\2\2\u00e6"+
		"\u00e7\7y\2\2\u00e7\u00e8\7j\2\2\u00e8\u00e9\7k\2\2\u00e9\u00ea\7n\2\2"+
		"\u00ea\u00eb\7g\2\2\u00eb\62\3\2\2\2\u00ec\u00ed\7f\2\2\u00ed\u00ee\7"+
		"q\2\2\u00ee\64\3\2\2\2\u00ef\u00f0\7f\2\2\u00f0\u00f1\7q\2\2\u00f1\u00f2"+
		"\7p\2\2\u00f2\u00f3\7g\2\2\u00f3\66\3\2\2\2\u00f4\u00f5\7=\2\2\u00f58"+
		"\3\2\2\2\u00f6\u00f7\7.\2\2\u00f7:\3\2\2\2\u00f8\u00f9\7?\2\2\u00f9<\3"+
		"\2\2\2\u00fa\u00fb\7]\2\2\u00fb>\3\2\2\2\u00fc\u00fd\7_\2\2\u00fd@\3\2"+
		"\2\2\u00fe\u00ff\7*\2\2\u00ffB\3\2\2\2\u0100\u0101\7+\2\2\u0101D\3\2\2"+
		"\2\u0102\u0103\7%\2\2\u0103F\3\2\2\2\u0104\u0105\7a\2\2\u0105H\3\2\2\2"+
		"\u0106\u0107\t\2\2\2\u0107J\3\2\2\2\u0108\u0113\t\3\2\2\u0109\u010a\7"+
		"n\2\2\u010a\u010b\7g\2\2\u010b\u0113\7p\2\2\u010c\u010d\7q\2\2\u010d\u010e"+
		"\7t\2\2\u010e\u0113\7f\2\2\u010f\u0110\7e\2\2\u0110\u0111\7j\2\2\u0111"+
		"\u0113\7t\2\2\u0112\u0108\3\2\2\2\u0112\u0109\3\2\2\2\u0112\u010c\3\2"+
		"\2\2\u0112\u010f\3\2\2\2\u0113L\3\2\2\2\u0114\u0123\t\4\2\2\u0115\u0116"+
		"\7@\2\2\u0116\u0123\7?\2\2\u0117\u0123\7>\2\2\u0118\u0119\7>\2\2\u0119"+
		"\u0123\7?\2\2\u011a\u011b\7?\2\2\u011b\u0123\7?\2\2\u011c\u011d\7#\2\2"+
		"\u011d\u0123\7?\2\2\u011e\u011f\7(\2\2\u011f\u0123\7(\2\2\u0120\u0121"+
		"\7~\2\2\u0121\u0123\7~\2\2\u0122\u0114\3\2\2\2\u0122\u0115\3\2\2\2\u0122"+
		"\u0117\3\2\2\2\u0122\u0118\3\2\2\2\u0122\u011a\3\2\2\2\u0122\u011c\3\2"+
		"\2\2\u0122\u011e\3\2\2\2\u0122\u0120\3\2\2\2\u0123N\3\2\2\2\u0124\u0125"+
		"\4\62;\2\u0125P\3\2\2\2\u0126\u0127\4c|\2\u0127R\3\2\2\2\u0128\u0129\4"+
		"C\\\2\u0129T\3\2\2\2\u012a\u012e\n\5\2\2\u012b\u012c\t\6\2\2\u012c\u012e"+
		"\5I%\2\u012d\u012a\3\2\2\2\u012d\u012b\3\2\2\2\u012eV\3\2\2\2\u012f\u0130"+
		"\7p\2\2\u0130\u0131\7w\2\2\u0131\u0132\7n\2\2\u0132\u0133\7n\2\2\u0133"+
		"X\3\2\2\2\u0134\u0135\t\7\2\2\u0135Z\3\2\2\2\u0136\u0137\7v\2\2\u0137"+
		"\u0138\7t\2\2\u0138\u0139\7w\2\2\u0139\u013a\7g\2\2\u013a\\\3\2\2\2\u013b"+
		"\u013c\7h\2\2\u013c\u013d\7c\2\2\u013d\u013e\7n\2\2\u013e\u013f\7u\2\2"+
		"\u013f\u0140\7g\2\2\u0140^\3\2\2\2\u0141\u0142\7v\2\2\u0142\u0143\7t\2"+
		"\2\u0143\u0144\7w\2\2\u0144\u014b\7g\2\2\u0145\u0146\7h\2\2\u0146\u0147"+
		"\7c\2\2\u0147\u0148\7n\2\2\u0148\u0149\7u\2\2\u0149\u014b\7g\2\2\u014a"+
		"\u0141\3\2\2\2\u014a\u0145\3\2\2\2\u014b`\3\2\2\2\u014c\u014d\7)\2\2\u014d"+
		"\u014e\5U+\2\u014e\u014f\7)\2\2\u014fb\3\2\2\2\u0150\u0154\7$\2\2\u0151"+
		"\u0153\5U+\2\u0152\u0151\3\2\2\2\u0153\u0156\3\2\2\2\u0154\u0152\3\2\2"+
		"\2\u0154\u0155\3\2\2\2\u0155\u0157\3\2\2\2\u0156\u0154\3\2\2\2\u0157\u0158"+
		"\7$\2\2\u0158d\3\2\2\2\u0159\u015b\5O(\2\u015a\u0159\3\2\2\2\u015b\u015c"+
		"\3\2\2\2\u015c\u015a\3\2\2\2\u015c\u015d\3\2\2\2\u015df\3\2\2\2\u015e"+
		"\u015f\7p\2\2\u015f\u0160\7w\2\2\u0160\u0161\7n\2\2\u0161\u0162\7n\2\2"+
		"\u0162h\3\2\2\2\u0163\u0168\5\3\2\2\u0164\u0168\5\5\3\2\u0165\u0168\5"+
		"\7\4\2\u0166\u0168\5\t\5\2\u0167\u0163\3\2\2\2\u0167\u0164\3\2\2\2\u0167"+
		"\u0165\3\2\2\2\u0167\u0166\3\2\2\2\u0168j\3\2\2\2\u0169\u016d\5G$\2\u016a"+
		"\u016d\5Q)\2\u016b\u016d\5S*\2\u016c\u0169\3\2\2\2\u016c\u016a\3\2\2\2"+
		"\u016c\u016b\3\2\2\2\u016d\u0174\3\2\2\2\u016e\u0173\5G$\2\u016f\u0173"+
		"\5S*\2\u0170\u0173\5Q)\2\u0171\u0173\5e\63\2\u0172\u016e\3\2\2\2\u0172"+
		"\u016f\3\2\2\2\u0172\u0170\3\2\2\2\u0172\u0171\3\2\2\2\u0173\u0176\3\2"+
		"\2\2\u0174\u0172\3\2\2\2\u0174\u0175\3\2\2\2\u0175l\3\2\2\2\u0176\u0174"+
		"\3\2\2\2\u0177\u017b\7%\2\2\u0178\u017a\n\b\2\2\u0179\u0178\3\2\2\2\u017a"+
		"\u017d\3\2\2\2\u017b\u0179\3\2\2\2\u017b\u017c\3\2\2\2\u017c\u017e\3\2"+
		"\2\2\u017d\u017b\3\2\2\2\u017e\u017f\b\67\2\2\u017fn\3\2\2\2\u0180\u0182"+
		"\t\t\2\2\u0181\u0180\3\2\2\2\u0182\u0183\3\2\2\2\u0183\u0181\3\2\2\2\u0183"+
		"\u0184\3\2\2\2\u0184\u0185\3\2\2\2\u0185\u0186\b8\2\2\u0186p\3\2\2\2\17"+
		"\2\u0112\u0122\u012d\u014a\u0154\u015c\u0167\u016c\u0172\u0174\u017b\u0183"+
		"\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}